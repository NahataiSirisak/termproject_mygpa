{"ast":null,"code":"var _jsxFileName = \"/Users/naan/Documents/termproject_MyGPA/src/expandedRow.js\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [];\n\nfunction addProducts(quantity) {\n  const startId = products.length;\n\n  for (let i = 0; i < quantity; i++) {\n    const id = startId + i;\n\n    if (i < 3) {\n      products.push({\n        id: id,\n        name: 'Item name ' + id,\n        price: 2100 + i,\n        expand: [{\n          fieldA: 'test1',\n          fieldB: (i + 1) * 99,\n          fieldC: (i + 1) * Math.random() * 100,\n          fieldD: '123eedd' + i\n        }, {\n          fieldA: 'test2',\n          fieldB: i * 99,\n          fieldC: i * Math.random() * 100,\n          fieldD: '123eedd' + i\n        }]\n      });\n    } else {\n      products.push({\n        id: id,\n        name: 'Item name ' + id,\n        price: 2100 + i\n      });\n    }\n  }\n}\n\naddProducts(5);\n\nclass BSTable extends React.Component {\n  render() {\n    if (this.props.data) {\n      return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        data: this.props.data,\n        children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"fieldA\",\n          isKey: true,\n          children: \"Field A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"fieldB\",\n          children: \"Field B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"fieldC\",\n          children: \"Field C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"fieldD\",\n          children: \"Field D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nexport default class ExpandRow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  isExpandableRow(row) {\n    if (row.id < 3) return true;else return false;\n  }\n\n  expandComponent(row) {\n    return /*#__PURE__*/_jsxDEV(BSTable, {\n      data: row.expand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const options = {\n      expandRowBgColor: 'rgb(242, 255, 163)'\n    };\n    return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      data: products,\n      options: options,\n      expandableRow: this.isExpandableRow,\n      expandComponent: this.expandComponent,\n      expandColumnOptions: {\n        expandColumnVisible: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        children: \"Product ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"name\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"price\",\n        children: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/naan/Documents/termproject_MyGPA/src/expandedRow.js"],"names":["React","BootstrapTable","TableHeaderColumn","products","addProducts","quantity","startId","length","i","id","push","name","price","expand","fieldA","fieldB","fieldC","Math","random","fieldD","BSTable","Component","render","props","data","ExpandRow","constructor","isExpandableRow","row","expandComponent","options","expandRowBgColor","expandColumnVisible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nconst products = [];\n\nfunction addProducts(quantity) {\n  const startId = products.length;\n  for (let i = 0; i < quantity; i++) {\n    const id = startId + i;\n    if (i < 3) {\n      products.push({\n        id: id,\n        name: 'Item name ' + id,\n        price: 2100 + i,\n        expand: [ {\n          fieldA: 'test1',\n          fieldB: (i + 1) * 99,\n          fieldC: (i + 1) * Math.random() * 100,\n          fieldD: '123eedd' + i\n        }, {\n          fieldA: 'test2',\n          fieldB: i * 99,\n          fieldC: i * Math.random() * 100,\n          fieldD: '123eedd' + i\n        } ]\n      });\n    } else {\n      products.push({\n        id: id,\n        name: 'Item name ' + id,\n        price: 2100 + i\n      });\n    }\n  }\n}\naddProducts(5);\n\nclass BSTable extends React.Component {\n  render() {\n    if (this.props.data) {\n      return (\n        <BootstrapTable data={ this.props.data }>\n          <TableHeaderColumn dataField='fieldA' isKey={ true }>Field A</TableHeaderColumn>\n          <TableHeaderColumn dataField='fieldB'>Field B</TableHeaderColumn>\n          <TableHeaderColumn dataField='fieldC'>Field C</TableHeaderColumn>\n          <TableHeaderColumn dataField='fieldD'>Field D</TableHeaderColumn>\n        </BootstrapTable>);\n    } else {\n      return (<p>?</p>);\n    }\n  }\n}\n\nexport default class ExpandRow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  isExpandableRow(row) {\n    if (row.id < 3) return true;\n    else return false;\n  }\n\n  expandComponent(row) {\n    return (\n      <BSTable data={ row.expand } />\n    );\n  }\n\n  render() {\n    const options = {\n      expandRowBgColor: 'rgb(242, 255, 163)'\n    };\n    return (\n      <BootstrapTable data={ products }\n        options={ options }\n        expandableRow={ this.isExpandableRow }\n        expandComponent={ this.expandComponent }\n        expandColumnOptions={ { expandColumnVisible: true } }>\n        <TableHeaderColumn dataField='id' isKey={ true }>Product ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>\n        <TableHeaderColumn dataField='price'>Product Price</TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}